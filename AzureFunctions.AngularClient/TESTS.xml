<?xml version="1.0"?>
<testsuite name="HeadlessChrome 0.0.0 (Mac OS X 10.13.4)" package="" timestamp="2018-04-12T01:06:50" id="0" hostname="traviss-mbp-2.lan" tests="118" errors="0" failures="0" time="4.79">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/67.0.3372.0 Safari/537.36"/>
  </properties>
  <testcase name="WizardCompletionStepComponent should create" time="0.165" classname="WizardCompletionStepComponent"/>
  <testcase name="WizardCompletionStepComponent should have correct step title" time="0.067" classname="WizardCompletionStepComponent"/>
  <testcase name="WizardCompletionStepComponent should enter first step after initialisation" time="0.055" classname="WizardCompletionStepComponent"/>
  <testcase name="WizardCompletionStepComponent should enter completion step after first step" time="0.045" classname="WizardCompletionStepComponent"/>
  <testcase name="WizardCompletionStepComponent should enter completion step after jumping over second optional step" time="0.045" classname="WizardCompletionStepComponent"/>
  <testcase name="WizardCompletionStepComponent should set the wizard as completed after entering the completion step" time="0.046" classname="WizardCompletionStepComponent"/>
  <testcase name="WizardCompletionStepComponent should be unable to leave the completion step" time="0.044" classname="WizardCompletionStepComponent"/>
  <testcase name="WizardCompletionStepComponent should not be able to leave the completion step in any direction" time="0.046" classname="WizardCompletionStepComponent"/>
  <testcase name="WizardCompletionStepComponent should not leave the completion step if it can't be exited" time="0.057" classname="WizardCompletionStepComponent"/>
  <testcase name="WizardNavigationBarComponent should create" time="0.042" classname="WizardNavigationBarComponent"/>
  <testcase name="WizardNavigationBarComponent should create only one navigation bar" time="0.045" classname="WizardNavigationBarComponent"/>
  <testcase name="WizardNavigationBarComponent should show the initial step correctly" time="0.042" classname="WizardNavigationBarComponent"/>
  <testcase name="WizardNavigationBarComponent should show the second step correctly" time="0.038" classname="WizardNavigationBarComponent"/>
  <testcase name="WizardNavigationBarComponent should show the third step correctly" time="0.038" classname="WizardNavigationBarComponent"/>
  <testcase name="WizardNavigationBarComponent should show the third step correctly, after jump from first to third step" time="0.035" classname="WizardNavigationBarComponent"/>
  <testcase name="WizardNavigationBarComponent should show the first step correctly, after going back from the second step to the first step" time="0.033" classname="WizardNavigationBarComponent"/>
  <testcase name="WizardNavigationBarComponent should show the first step correctly, after first jumping from the first to the third step and then back from the third step to the first step" time="0.04" classname="WizardNavigationBarComponent"/>
  <testcase name="WizardNavigationBarComponent should show the second step correctly, after first jumping from the first to the third step and then back from the third step to the second step" time="0.044" classname="WizardNavigationBarComponent"/>
  <testcase name="WizardNavigationBarComponent should move back to the first step from the second step, after clicking on the corresponding link" time="0.046" classname="WizardNavigationBarComponent"/>
  <testcase name="WizardNavigationBarComponent should move back to the first step from the third step, after clicking on the corresponding link" time="0.044" classname="WizardNavigationBarComponent"/>
  <testcase name="WizardNavigationBarComponent should move back to the second step from the third step, after clicking on the corresponding link" time="0.046" classname="WizardNavigationBarComponent"/>
  <testcase name="WizardNavigationBarComponent should not move to the second step from the first step, after clicking on the corresponding link" time="0.04" classname="WizardNavigationBarComponent"/>
  <testcase name="WizardStepComponent should create" time="0.044" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should have correct step title" time="0.042" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should enter first step after initialisation" time="0.042" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should enter second step after first step" time="0.037" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should enter first step after exiting second step" time="0.039" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should enter third step after jumping over second optional step" time="0.039" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should enter first step after jumping over second optional step two times" time="0.038" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should enter second step after jumping over second optional step and the going back once" time="0.039" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should stay at first step correctly" time="0.036" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should not be able to leave the second step in any direction" time="0.039" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should not be able to leave the second step in forwards direction" time="0.038" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should not be able to leave the second step in backwards direction" time="0.04" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should throw error when method &quot;canExit&quot; is malformed" time="0.041" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should not leave the second step in forward direction if it can't be exited" time="0.032" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should not leave the second step in backward direction if it can't be exited" time="0.033" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should not leave the second step in forward direction if it can't be exited in this direction" time="0.041" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should not leave the second step in backward direction if it can't be exited in this direction" time="0.035" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should leave the second step in forward direction if it can be exited in this direction" time="0.047" classname="WizardStepComponent"/>
  <testcase name="WizardStepComponent should leave the second step in backward direction if it can be exited in this direction" time="0.041" classname="WizardStepComponent"/>
  <testcase name="WizardComponent should create" time="0.035" classname="WizardComponent"/>
  <testcase name="WizardComponent should have steps" time="0.038" classname="WizardComponent"/>
  <testcase name="WizardComponent should start at first step" time="0.028" classname="WizardComponent"/>
  <testcase name="WizardComponent should return correct step at index" time="0.039" classname="WizardComponent"/>
  <testcase name="WizardComponent should return correct index at step" time="0.044" classname="WizardComponent"/>
  <testcase name="WizardComponent should return correct can go to step" time="0.045" classname="WizardComponent"/>
  <testcase name="WizardComponent should return correct can go to next step" time="0.036" classname="WizardComponent"/>
  <testcase name="WizardComponent should return correct can go to previous step" time="0.034" classname="WizardComponent"/>
  <testcase name="WizardComponent should go to step" time="0.038" classname="WizardComponent"/>
  <testcase name="WizardComponent should go to next step" time="0.035" classname="WizardComponent"/>
  <testcase name="WizardComponent should go to previous step" time="0.043" classname="WizardComponent"/>
  <testcase name="WizardComponent should have next step" time="0.039" classname="WizardComponent"/>
  <testcase name="WizardComponent should have previous step" time="0.042" classname="WizardComponent"/>
  <testcase name="WizardComponent should be last step" time="0.04" classname="WizardComponent"/>
  <testcase name="WizardComponent should reset the wizard correctly" time="0.03" classname="WizardComponent"/>
  <testcase name="EnableBackLinksDirective should create" time="0.043" classname="EnableBackLinksDirective"/>
  <testcase name="EnableBackLinksDirective should have correct step title" time="0.037" classname="EnableBackLinksDirective"/>
  <testcase name="EnableBackLinksDirective should enter first step after initialisation" time="0.037" classname="EnableBackLinksDirective"/>
  <testcase name="EnableBackLinksDirective should enter completion step after first step" time="0.043" classname="EnableBackLinksDirective"/>
  <testcase name="EnableBackLinksDirective should enter completion step after jumping over second optional step" time="0.036" classname="EnableBackLinksDirective"/>
  <testcase name="EnableBackLinksDirective should be able to leave the completion step" time="0.042" classname="EnableBackLinksDirective"/>
  <testcase name="EnableBackLinksDirective should be able to leave the completion step in any direction" time="0.043" classname="EnableBackLinksDirective"/>
  <testcase name="EnableBackLinksDirective should leave the completion step" time="0.039" classname="EnableBackLinksDirective"/>
  <testcase name="EnableBackLinksDirective should work with changed stepExit value" time="0.05" classname="EnableBackLinksDirective"/>
  <testcase name="GoToStepDirective should create an instance" time="0.051" classname="GoToStepDirective"/>
  <testcase name="GoToStepDirective should move to step correctly" time="0.061" classname="GoToStepDirective"/>
  <testcase name="GoToStepDirective should jump over an optional step correctly" time="0.048" classname="GoToStepDirective"/>
  <testcase name="GoToStepDirective should stay at current step correctly" time="0.044" classname="GoToStepDirective"/>
  <testcase name="GoToStepDirective should finalize step correctly" time="0.043" classname="GoToStepDirective"/>
  <testcase name="GoToStepDirective should throw an error when using an invalid goToStep value" time="0.043" classname="GoToStepDirective"/>
  <testcase name="GoToStepDirective should return correct destination step for correct goToStep values" time="0.048" classname="GoToStepDirective"/>
  <testcase name="GoToStepDirective should not leave current step if it the destination step can not be entered" time="0.046" classname="GoToStepDirective"/>
  <testcase name="NextStepDirective should create an instance" time="0.045" classname="NextStepDirective"/>
  <testcase name="NextStepDirective should move correctly to the next step" time="0.044" classname="NextStepDirective"/>
  <testcase name="NextStepDirective should move call finalize correctly when going the next step" time="0.035" classname="NextStepDirective"/>
  <testcase name="OptionalStepDirective should create an instance" time="0.039" classname="OptionalStepDirective"/>
  <testcase name="OptionalStepDirective should set optional correctly" time="0.032" classname="OptionalStepDirective"/>
  <testcase name="PreviousStepDirective should create an instance" time="0.033" classname="PreviousStepDirective"/>
  <testcase name="PreviousStepDirective should move correctly to the previous step" time="0.034" classname="PreviousStepDirective"/>
  <testcase name="WizardCompletionStepDirective should create" time="0.037" classname="WizardCompletionStepDirective"/>
  <testcase name="WizardCompletionStepDirective should have correct step title" time="0.038" classname="WizardCompletionStepDirective"/>
  <testcase name="WizardCompletionStepDirective should enter first step after initialisation" time="0.035" classname="WizardCompletionStepDirective"/>
  <testcase name="WizardCompletionStepDirective should enter completion step after first step" time="0.038" classname="WizardCompletionStepDirective"/>
  <testcase name="WizardCompletionStepDirective should enter completion step after jumping over second optional step" time="0.033" classname="WizardCompletionStepDirective"/>
  <testcase name="WizardCompletionStepDirective should set the wizard as completed after entering the completion step" time="0.033" classname="WizardCompletionStepDirective"/>
  <testcase name="WizardCompletionStepDirective should be unable to leave the completion step" time="0.038" classname="WizardCompletionStepDirective"/>
  <testcase name="WizardCompletionStepDirective should not be able to leave the completion step in any direction" time="0.033" classname="WizardCompletionStepDirective"/>
  <testcase name="WizardCompletionStepDirective should not leave the completion step if it can't be exited" time="0.035" classname="WizardCompletionStepDirective"/>
  <testcase name="PreviousStepDirective should create an instance" time="0.053" classname="PreviousStepDirective"/>
  <testcase name="WizardStepDirective should create" time="0.036" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should have correct step title" time="0.037" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should enter first step after initialisation" time="0.033" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should enter second step after first step" time="0.037" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should enter first step after exiting second step" time="0.037" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should enter third step after jumping over second optional step" time="0.038" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should enter first step after jumping over second optional step two times" time="0.035" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should enter second step after jumping over second optional step and the going back once" time="0.036" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should stay at first step correctly" time="0.031" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should not be able to leave the second step in any direction" time="0.035" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should not be able to leave the second step in forwards direction" time="0.038" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should not be able to leave the second step in backwards direction" time="0.04" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should throw error when method &quot;canExit&quot; is malformed" time="0.04" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should not leave the second step in forward direction if it can't be exited" time="0.04" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should not leave the second step in backward direction if it can't be exited" time="0.042" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should not leave the second step in forward direction if it can't be exited in this direction" time="0.037" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should not leave the second step in backward direction if it can't be exited in this direction" time="0.04" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should leave the second step in forward direction if it can be exited in this direction" time="0.04" classname="WizardStepDirective"/>
  <testcase name="WizardStepDirective should leave the second step in backward direction if it can be exited in this direction" time="0.052" classname="WizardStepDirective"/>
  <testcase name="WizardStep should create an instance" time="0.046" classname="WizardStep"/>
  <testcase name="WizardStep should be a WizardStep" time="0.045" classname="WizardStep"/>
  <testcase name="WizardStep should not be a WizardStep" time="0.042" classname="WizardStep"/>
  <testcase name="StepBuildProviderComponent init should create" time="0.036" classname="StepBuildProviderComponent"/>
  <testcase name="StepBuildProviderComponent init should start with kudu" time="0.031" classname="StepBuildProviderComponent"/>
  <testcase name="StepBuildProviderComponent init should change to vsts" time="0.026" classname="StepBuildProviderComponent"/>
  <testcase name="FtpDashboardComponent should create" time="0.016" classname="FtpDashboardComponent"/>
  <testcase name="ReadFromZipDashboardComponent should create" time="0.012" classname="ReadFromZipDashboardComponent"/>
  <testcase name="WebDeployDashboardComponent should create" time="0.011" classname="WebDeployDashboardComponent"/>
  <system-out>
    <![CDATA[
]]>
  </system-out>
  <system-err/>
</testsuite>