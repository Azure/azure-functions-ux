# Node.js with gulp
# Build a Node.js project using the gulp task runner.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
jobs:
  - job: EtwLogger
    steps:
      # - task: UseDotNet@2
      #   displayName: 'Use dotnetcore 3'
      #   inputs:
      #     packageType: 'sdk'
      #     version: '3.x'
      #     includePreviewVersions: true
      - task: DotNetCoreCLI@2
        displayName: 'dotnetcore restore'
        inputs:
          command: 'restore'
          feedsToUse: 'select'
          projects: 'TraceLoggingApp/TraceLoggingApp.csproj'
          includeNuGetOrg: true
      - task: DotNetCoreCLI@2
        displayName: 'dotnetcore build'
        inputs:
          command: 'build'
          arguments: '--configuration Release'
          projects: 'TraceLoggingApp/TraceLoggingApp.csproj'
      - task: CopyFiles@2
        inputs:
          SourceFolder: 'TraceLoggingApp/bin/Release/netcoreapp3.1/'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: EtwLogger'
        inputs:
          ArtifactName: EtwLogger

  - job: Server
    pool:
      vmImage: 'macOS-10.14'
    dependsOn:
      - EtwLogger
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: 'Download EtwLogger Build Artifacts'
        inputs:
          artifactName: EtwLogger
          downloadPath: $(System.DefaultWorkingDirectory)

      - task: CopyFiles@2
        displayName: 'Copy EtwLogger Build Files to: $(Build.ArtifactStagingDirectory)'
        inputs:
          SourceFolder: $(System.DefaultWorkingDirectory)/EtwLogger
          TargetFolder: server/dist/EtwLogger

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: server/dist
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/package.zip'
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: dest'
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)/package.zip'
          ArtifactName: dest
