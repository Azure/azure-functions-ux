# Node.js with gulp
# Build a Node.js project using the gulp task runner.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
jobs:
  - job: Server
    pool:
      vmImage: 'Ubuntu 16.04'

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '8.x'
        displayName: 'Install Node.js'

      - script: |
          npm install -g @angular/cli
        displayName: 'install angular CLI'

      - script: |
          npm install -g yarn
        displayName: 'install yarn'

      - script: |
          npm install -g gulp-cli
        displayName: 'install gulp'

      - script: |
          npm install -g typescript
        displayName: 'install typescript'

      - script: |
          cd server
          yarn install
        displayName: 'yarn install on server'

      - script: |
          cd server
          gulp build-production
        displayName: 'Setup Environment Variables and Build Resources'
        env:
          bitbucketClientId: $(bitbucketClientId)
          githubClientId: $(githubClientId)
          githubClientSecret: $(githubClientSecret)
          githubRedirectUrl: $(githubRedirectUrl)
          bitbucketClientSecret: $(bitbucketClientSecret)
          bitbucketRedirectUrl: $(bitbucketRedirectUrl)
          dropboxClientSecret: $(dropboxClientSecret)
          dropboxClientId: $(dropboxClientId)
          dropboxRedirectUrl: $(dropboxRedirectUrl)
          onedriveClientSecret: $(onedriveClientSecret)
          onedriveClientID: $(onedriveClientID)
          onedriveRedirectUrl: $(onedriveRedirectUrl)

      - script: |
          cd server
          tsc
        displayName: 'Build Server'

      - task: CopyFiles@2
        displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
        inputs:
          SourceFolder: server/build
          TargetFolder: '$(Build.ArtifactStagingDirectory)'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: server'
        inputs:
          ArtifactName: server

  - job: AngularFull
    pool:
      vmImage: 'Ubuntu 16.04'

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '8.x'
        displayName: 'Install Node.js'

      - script: |
          npm install -g @angular/cli
        displayName: 'install angular CLI'

      - script: |
          npm install -g yarn
        displayName: 'install yarn'

      - script: |
          cd client
          yarn install
        displayName: 'yarn install on angular'

      - script: |
          cd client
          ng build --progress false --output-path="public/ng-full"
        displayName: 'ng build full'

      - task: CopyFiles@2
        displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
        inputs:
          SourceFolder: client/public
          TargetFolder: '$(Build.ArtifactStagingDirectory)/public'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: angular-full'
        inputs:
          ArtifactName: angular-full

  - job: PublishArtifacts
    pool:
      vmImage: 'Ubuntu 16.04'

    dependsOn:
      - Server
      - AngularFull
    steps:
      - checkout: none
      - task: DownloadBuildArtifacts@0
        displayName: 'Download Server Artifacts'
        inputs:
          artifactName: server
          downloadPath: $(Build.ArtifactStagingDirectory)

      - task: DownloadBuildArtifacts@0
        displayName: 'Download Server Artifacts'
        inputs:
          artifactName: server
          downloadPath: $(Build.ArtifactStagingDirectory)

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: dest'
        inputs:
          ArtifactName: dest
